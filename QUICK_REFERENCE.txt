╔════════════════════════════════════════════════════════════════╗
║              API - REFERÊNCIA RÁPIDA                           ║
╚════════════════════════════════════════════════════════════════╝

=== INSTALAÇÃO ===
1. npm install
2. Configurar IPs em src/config/allowedIPs.js
3. npm start

=== ENDPOINTS ===

GET /
→ Lista todos os endpoints disponíveis

POST /validate-cpf
→ Body: {"cpf": "12345678901"}
→ Valida CPF brasileiro

POST /read-pdf
→ Body: form-data, key="pdf" (arquivo)
→ Extrai texto de PDF

=== ESTRUTURA ===

src/
├── config/         → Configurações (IPs autorizados)
├── middlewares/    → Filtros de segurança
├── routes/         → Definição de rotas
├── controllers/    → Lógica de negócio
└── utils/          → Funções auxiliares

=== ADICIONAR NOVO ENDPOINT ===

1. Criar: src/controllers/nomeController.js
   export const minhaFuncao = async (req, res) => { ... }

2. Criar: src/routes/nomeRoutes.js
   import { minhaFuncao } from '../controllers/nomeController.js';
   router.post('/minha-rota', minhaFuncao);

3. Em server.js:
   import nomeRoutes from './src/routes/nomeRoutes.js';
   app.use(nomeRoutes);

4. Atualizar: src/routes/index.js (adicionar à lista)

=== COMANDOS ÚTEIS ===

npm install <pacote>     → Instalar dependência
npm start               → Iniciar servidor
ipconfig                → Ver IP da máquina

mv arquivo.js novo.js   → Renomear arquivo
mkdir pasta             → Criar pasta

=== SEGURANÇA ===

✓ Código do servidor NÃO é visível aos clientes
✓ Apenas IPs autorizados podem acessar
✓ Bloqueio retorna: {"error": "Pare de tentar hackear! ;)"}

=== ACESSO ===

Local:  http://localhost:3000
LAN:    http://192.168.168.100:3000

IPs autorizados: Ver src/config/allowedIPs.js

=== DOCUMENTAÇÃO COMPLETA ===

README.md → Documentação detalhada com exemplos

╚════════════════════════════════════════════════════════════════╝
